server:
  port: 8083

spring:
  # 配置微服名称
  application:
    name: water-springboot-8083
    # 配置数据源
  datasource:
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF8&useSSL=false
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      min-idle: 5
      max-active: 10
      max-wait: 5000
  # thymeleaf模板引擎
  thymeleaf:
    cache: false
    # 模板引擎的前缀
    prefix: classpath:/templates/water/
    # 模板引擎后缀
    suffix: .html
      # Springboot从classpath中按如下优先级加载对应前端静态资源
      # classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resource
      # 除此之外还要加载E:/upLoad/picture/路径下的静态资源
  resources:
    static-locations: classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resource,file:${location}

# 上传到服务器的路径
location: E:/upLoad/picture/


# 配置MyBatis持久层框架
mybatis:
  # 执行实体类名称别名所在的包
  type-aliases-package: com.sly.water.entities
  configuration:
    # 开启驼峰命名，让数据库表的字段和Java实体类的属性完成映射
    map-underscore-to-camel-case: true
    # 配置日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 配置映射文件的位置
  mapper-locations: classpath:/mappers/*Mapper.xml

